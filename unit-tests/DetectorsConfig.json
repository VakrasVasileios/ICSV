{
  "smells": [
    {
      "tag": "Too many parameters",
      "description": "Detects methods with an excessive amount of parameters",
      "type": "range",
      "material": "CubeMat",
      "range": {
        "min": 5,
        "max": 10
      }
    },
    {
      "tag": "Too many function literals",
      "description": "Detects excessive method literal count",
      "type": "range",
      "range": {
        "min": 12,
        "max": 30
      }
    },
    {
      "tag": "Too many locals",
      "description": "Detects excessive method local variable declarations",
      "type": "range",
      "range": {
        "min": 10,
        "max": 24
      }
    },
    {
      "tag": "Long function",
      "description": "Detects methods with too many statemets or too many lines",
      "type": "args",
      "args": [
        {
          "tag": "max_statements",
          "description": "Maximum method statement count",
          "type": "range",
          "range": {
            "min": 70,
            "max": 161
          }
        },
        {
          "tag": "max_lines",
          "description": "Maximum Method line count",
          "type": "range",
          "range": {
            "min": 70,
            "max": 120
          }
        }
      ]
    },
    {
      "tag": "Cyclomatic complexity",
      "description": "Detects methods with excessive branches (if, switch, while, for, continue, break, return)",
      "type": "args",
      "args": [
        {
          "tag": "max_loops",
          "description": "Maximum method loops",
          "type": "range",
          "range": {
            "min": 6,
            "max": 12
          }
        },
        {
          "tag": "max_branches",
          "description": "Maximum method branching statements",
          "type": "range",
          "range": {
            "min": 14,
            "max": 20
          }
        }
      ]
    },
    {
      "tag": "Excessively long identifier",
      "description": "Detects identifiers with too many characters",
      "type": "range",
      "color": [
        1,
        0,
        0
      ],
      "range": {
        "min": 25,
        "max": 45
      }
    },
    {
      "tag": "Excessively long line of code",
      "description": "Detects too long lines of un-commented code",
      "type": "range",
      "range": {
        "min": 120,
        "max": 150
      }
    },
    {
      "tag": "Naming conventions",
      "description": "Detects identifiers that do not follow naming conventions",
      "type": "regex",
      "regex_array": [
        {
          "tag": "UpperCamelCase",
          "regex": "([A-Z][a-z0-9]*)((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?"
        },
        {
          "tag": "LowerCamelCase",
          "regex": "[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?"
        },
        {
          "tag": "SnakeCase",
          "regex": "([a-z]*_?[a-z]*)*"
        },
        {
          "tag": "any",
          "regex": "[\\s\\S]*"
        }
      ],
      "fields": [
        {
          "tag": "class_names",
          "assigned_regex": "UpperCamelCase"
        },
        {
          "tag": "method_names",
          "assigned_regex": "UpperCamelCase"
        },
        {
          "tag": "var_names",
          "assigned_regex": "any"
        }
      ],
      "range": {
        "min": 0,
        "max": 32
      }
    },
    {
      "tag": "Nested Scopes",
      "description": "Detects methods that nest scopes too deep",
      "type": "range",
      "range": {
        "min": 3,
        "max": 7
      }
    },
    {
      "tag": "Circular Dependency",
      "description": "Detects circlular dependency between structures",
      "type": "range",
      "range": {
        "min": 2,
        "max": 6
      }
    },
    {
      "tag": "Large Class",
      "description": "Detects structures with too many methods or fields",
      "public_only": true,
      "type": "args",
      "args": [
        {
          "tag": "max_methods",
          "description": "Maximum count of methods",
          "type": "range",
          "range": {
            "min": 8,
            "max": 29
          }
        },
        {
          "tag": "max_fields",
          "description": "Maximum count of fields",
          "type": "range",
          "range": {
            "min": 6,
            "max": 17
          }
        }
      ]
    },
    {
      "tag": "Large File",
      "description": "Detects code files with too many lines",
      "type": "args",
      "args": [
        {
          "tag": "big_source_file",
          "description": "Detects source files with too many lines",
          "type": "range",
          "range": {
            "min": 619,
            "max": 1200
          }
        },
        {
          "tag": "big_header_file",
          "description": "Detects header files with too many lines",
          "type": "range",
          "range": {
            "min": 200,
            "max": 400
          }
        }
      ]
    },
    {
      "tag": "Inappropriate Intimacy",
      "description": "@argument max_member_expr: Max count of member expr from one class to any other class.",
      "type": "range",
      "range": {
        "min": 50,
        "max": 120
      }
    },
    {
      "tag": "Non virtual base destructor",
      "description": "Flags destructors of base classes that are not virtual.",
      "type": "bool"
    },
    {
      "tag": "Redundant protected access",
      "description": "Detects protected member functions or variables declared in classes that are not inherited from.",
      "type": "range",
      "range": {
        "min": 1,
        "max": 5
      }
    },
    {
      "tag": "Excessive function overloading",
      "description": "Detects functions that are overloaded too many times.",
      "type": "range",
      "range": {
        "min": 8,
        "max": 14
      }
    },
    {
      "tag": "Many Dependencies",
      "description": "Detects structures that directly depend upon too many other structures. Indirect dependencies are not counted.",
      "type": "range",
      "range": {
        "min": 8,
        "max": 16
      }
    }
  ]
}