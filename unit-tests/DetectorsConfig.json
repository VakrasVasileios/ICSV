{
    "detectors": [{
            "name": "Too many parameters",
            "description": "Detects methods with an excessive amount of parameters",
            "args": [{
                "tag": "max_argc",
                "formal_name": "Maximum method arguments",
                "type": "range",
                "range": [
                    5,
                    10
                ],
                "limits": [
                    2,
                    15
                ]
            }]
        },
        {
            "name": "Too many function literals",
            "description": "Detects excessive method literal count",
            "args": [{
                "tag": "max_literals",
                "formal_name": "Maximum method literals",
                "type": "range",
                "range": [
                    12,
                    30
                ],
                "limits": [
                    1,
                    50
                ]
            }]
        },
        {
            "name": "Too many locals",
            "description": "Detects excessive method local variable declarations",
            "args": [{
                "tag": "max_locals",
                "formal_name": "Maximum method locals",
                "type": "range",
                "range": [
                    10,
                    24
                ],
                "limits": [
                    1,
                    30
                ]
            }]
        },
        {
            "name": "Long function",
            "description": "Detects methods with too many statemets or too many lines",
            "args": [{
                    "tag": "max_statements",
                    "formal_name": "Maximum method statement count",
                    "type": "range",
                    "range": [
                        70,
                        161
                    ],
                    "limits": [
                        20,
                        200
                    ]
                },
                {
                    "tag": "max_lines",
                    "formal_name": "Maximum Method line count",
                    "type": "range",
                    "range": [
                        70,
                        120
                    ],
                    "limits": [
                        5,
                        200
                    ]
                }
            ]
        },
        {
            "name": "Cyclomatic complexity",
            "description": "Detects methods with excessive branches (if, switch, while, for, continue, break, return)",
            "args": [{
                    "tag": "max_loops",
                    "formal_name": "Maximum method loops",
                    "type": "range",
                    "range": [
                        6,
                        12
                    ],
                    "limits": [
                        1,
                        30
                    ]
                },
                {
                    "tag": "max_branches",
                    "formal_name": "Maximum method branching statements",
                    "type": "range",
                    "range": [
                        14,
                        20
                    ],
                    "limits": [
                        1,
                        60
                    ]
                }
            ]
        },
        {
            "name": "Excessively long identifier",
            "description": "Detects identifiers with too many characters",
            "args": [{
                "tag": "max_id_len",
                "formal_name": "Maximum length of an identifier",
                "type": "range",
                "range": [
                    25,
                    45
                ],
                "limits": [
                    5,
                    100
                ]
            }]
        },
        {
            "name": "Excessively long line of code",
            "description": "Detects too long lines of un-commented code",
            "args": [{
                "tag": "max_line_len",
                "formal_name": "Maximum length of a line in characters",
                "type": "range",
                "range": [
                    120,
                    150
                ],
                "limits": [
                    40,
                    200
                ]
            }]
        },
        {
            "name": "Naming conventions",
            "description": "Detects identifiers that do not follow naming conventions",
            "args": [{
                    "tag": "dict0",
                    "UpperCamelCase": "([A-Z][a-z0-9]*)((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?",
                    "lowerCamelCase": "[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?",
                    "snake_case": "([a-z]*_?[a-z]*)*",
                    "any": "[\\s\\S]*"
                },
                {
                    "tag": "class_names",
                    "formal_name": "Class names",
                    "val": "UpperCamelCase",
                    "type": "enum",
                    "dict": "dict0"
                },
                {
                    "tag": "method_names",
                    "formal_name": "Method names",
                    "val": "UpperCamelCase",
                    "type": "enum",
                    "dict": "dict0"
                },
                {
                    "tag": "var_names",
                    "formal_name": "Variable names",
                    "val": "any",
                    "type": "enum",
                    "dict": "dict0"
                },
                {
                    "tag": "use_id_len_as_score",
                    "type": "boolean",
                    "value": false
                },
                {
                    "tag": "max_chars_ignored",
                    "formal_name": "Maximum characters ignored",
                    "type": "range",
                    "range": [
                        0,
                        32
                    ],
                    "limits": [
                        0,
                        60
                    ]
                }
            ]
        },
        {
            "name": "Nested scopes",
            "description": "Detects methods that nest scopes too deep",
            "args": [{
                "tag": "max_nested_scopes",
                "formal_name": "Maximum depth of nested blocks",
                "type": "range",
                "range": [
                    3,
                    7
                ],
                "limits": [
                    2,
                    12
                ]
            }]
        },
        {
            "name": "Circular dependency",
            "description": "Detects circlular dependency between structures",
            "args": [{
                "tag": "max_circle_len",
                "formal_name": "Maximum circle length",
                "type": "range",
                "range": [
                    2,
                    6
                ],
                "limits": [
                    1,
                    20
                ]
            }]
        },
        {
            "name": "Large Class",
            "description": "Detects structures with too many methods or fields",
            "args": [{
                    "tag": "max_methods",
                    "formal_name": "Maximum count of methods",
                    "type": "range",
                    "range": [
                        8,
                        29
                    ],
                    "limits": [
                        2,
                        40
                    ]
                },
                {
                    "tag": "max_fields",
                    "formal_name": "Maximum count of fields",
                    "type": "range",
                    "range": [
                        6,
                        17
                    ],
                    "limits": [
                        2,
                        40
                    ]
                },
                {
                    "tag": "public_only",
                    "formal_name": "Public only",
                    "value": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "name": "Large File",
            "description": "Detects code files with too many lines",
            "args": [{
                    "tag": "max_src_lines",
                    "formal_name": "Maximum source file lines",
                    "type": "range",
                    "range": [
                        619,
                        1200
                    ],
                    "limits": [
                        200,
                        1200
                    ]
                },
                {
                    "tag": "max_header_lines",
                    "formal_name": "Maximum header file lines",
                    "type": "range",
                    "range": [
                        200,
                        550
                    ],
                    "limits": [
                        100,
                        800
                    ]
                }
            ]
        },
        {
            "name": "Inappropriate Intimacy",
            "description": "@argument max_member_expr: Max count of member expr from one class to any other class.",
            "args": [{
                "tag": "max_member_expr",
                "formal_name": "Maximum member expressions",
                "type": "range",
                "range": [
                    50,
                    120
                ],
                "limits": [
                    20,
                    200
                ]
            }]
        },
        {
            "name": "Non virtual base destructor",
            "description": "Flags destructors of base classes that are not virtual.",
            "args": []
        },
        {
            "name": "Redundant protected access",
            "description": "Detects protected member functions or variables declared in classes that are not inherited from.",
            "args": [{
                "tag": "max_unneeded_protected",
                "formal_name": "Maximum unnecessary protected",
                "type": "range",
                "range": [
                    1,
                    5
                ],
                "limits": [
                    1,
                    20
                ]
            }]
        },
        {
            "name": "Excessive function overloading",
            "description": "Detects functions that are overloaded too many times.",
            "args": [{
                "tag": "max_overload",
                "formal_name": "Maximum overloads of a function",
                "type": "range",
                "range": [
                    8,
                    14
                ],
                "limits": [
                    2,
                    20
                ]
            }]
        },
        {
            "name": "Many dependencies",
            "description": "Detects structures that directly depend upon too many other structures. Indirect dependencies are not counted.",
            "args": [{
                "tag": "max_direct_dependencies",
                "formal_name": "Maximum direct dependencies",
                "type": "range",
                "range": [
                    8,
                    16
                ],
                "limits": [
                    4,
                    40
                ]
            }]
        }
    ]
}